var annotationId = "00000000-0000-0000-0000-000000000002"; // Replace with actual annotation GUID
var metadataUrl = "/api/data/v9.2/annotations(" + annotationId + ")?$select=filename,mimetype";
var downloadUrl = "/api/data/v9.2/annotations(" + annotationId + ")/documentbody/$value";

// Step 2: Fetch metadata and download binary
safeAjax({
    type: "GET",
    url: metadataUrl,
    contentType: "application/json",
    success: function (metaData) {
        var filename = metaData.filename || "download"; // Fallback if filename is missing
        var mimetype = metaData.mimetype || "application/octet-stream"; // Fallback MIME type

        // Download the binary attachment
        safeAjax({
            type: "GET",
            url: downloadUrl,
            contentType: "application/json",
            xhrFields: {
                responseType: "blob" // Handle binary data
            },
            success: function (blobData, textStatus, jqXHR) {
                // Create a downloadable link
                var blob = new Blob([blobData], { type: mimetype });
                var url = window.URL.createObjectURL(blob);
                var a = document.createElement("a");
                a.href = url;
                a.download = filename;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);
                console.log("Attachment downloaded successfully: " + filename);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error("Error downloading attachment: ", textStatus, errorThrown);
            }
        });
    },
    error: function (jqXHR, textStatus, errorThrown) {
        console.error("Error retrieving metadata: ", textStatus, errorThrown);
    }
});