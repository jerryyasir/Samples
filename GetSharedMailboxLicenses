# Import required modules
Import-Module ExchangeOnlineManagement -Force
Import-Module MSOnline -Force

# Connect to Exchange Online (interactive login; supports MFA)
Write-Host "Connecting to Exchange Online..." -ForegroundColor Yellow
Connect-ExchangeOnline -ShowBanner:$false

# Connect to Azure AD (for license info; interactive login)
Write-Host "Connecting to Azure AD..." -ForegroundColor Yellow
Connect-MsolService

# Initialize report array
$Report = @()

# Get all shared mailboxes
Write-Host "Retrieving all shared mailboxes..." -ForegroundColor Yellow
$SharedMailboxes = Get-Mailbox -ResultSize Unlimited -RecipientTypeDetails SharedMailbox -ErrorAction Stop

# Process each shared mailbox
foreach ($Mailbox in $SharedMailboxes) {
    try {
        # Get license details from Azure AD
        $User = Get-MsolUser -UserPrincipalName $Mailbox.UserPrincipalName -ErrorAction SilentlyContinue
        $LicenseStatus = if ($User -and $User.IsLicensed) {
            $Licenses = $User.Licenses | ForEach-Object { $_.AccountSkuId }
            "Licensed: $($Licenses -join ', ')"
        } else {
            "No licenses assigned"
        }

        # Create report object
        $ReportObject = [PSCustomObject]@{
            UserPrincipalName = $Mailbox.UserPrincipalName
            DisplayName       = $Mailbox.DisplayName
            MailboxType       = $Mailbox.RecipientTypeDetails
            LicenseStatus     = $LicenseStatus
            LastChecked       = (Get-Date -Format "yyyy-MM-dd HH:mm:ss")
        }

        # Add to report
        $Report += $ReportObject

        # Output to console
        Write-Host "Shared mailbox: $($Mailbox.UserPrincipalName), DisplayName: $($Mailbox.DisplayName), Licenses: $LicenseStatus" -ForegroundColor Green
    }
    catch {
        Write-Warning "Error processing $($Mailbox.UserPrincipalName): $($_.Exception.Message)"
        $Report += [PSCustomObject]@{
            UserPrincipalName = $Mailbox.UserPrincipalName
            DisplayName       = $Mailbox.DisplayName
            MailboxType       = $Mailbox.RecipientTypeDetails
            LicenseStatus     = "Error: $($_.Exception.Message)"
            LastChecked       = (Get-Date -Format "yyyy-MM-dd HH:mm:ss")
        }
    }
}

# Export report to CSV
$CsvPath = "SharedMailboxesReport_$(Get-Date -Format 'yyyyMMdd_HHmmss').csv"
$Report | Export-Csv -Path $CsvPath -NoTypeInformation

# Disconnect from Exchange Online
Disconnect-ExchangeOnline -Confirm:$false -ErrorAction SilentlyContinue
Write-Host "Report exported to $CsvPath in the current directory." -ForegroundColor Yellow
